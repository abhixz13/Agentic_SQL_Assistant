{
  "schema_hash": "b905499f3bff016cc7f667e7391d0761",
  "generated_at": "2025-08-18T16:17:01.439907",
  "examples": [
    {
      "id": "example_1",
      "question": "What is the total revenue generated from each sales channel for the last quarter?",
      "thinking_process": [
        "Step 1: Identify the relevant columns for revenue calculation and grouping.",
        "Step 2: Filter the data for the last quarter based on the order_date.",
        "Step 3: Use SUM to aggregate total_price by sales_channel."
      ],
      "query_breakdown": [
        "1. Select sales_channel and sum of total_price.",
        "2. Filter records where order_date is within the last quarter.",
        "3. Group results by sales_channel.",
        "4. Order results by total_price in descending order."
      ],
      "sql": "SELECT sales_channel, SUM(total_price) AS total_revenue FROM product_sales WHERE order_date >= DATE('now', '-3 months') GROUP BY sales_channel ORDER BY total_revenue DESC;",
      "explanation": "This approach allows us to analyze revenue contributions from different sales channels over a specific time frame, which is crucial for strategic decision-making.",
      "complexity": "medium",
      "patterns": [
        "aggregate",
        "filtering",
        "grouping"
      ]
    },
    {
      "id": "example_2",
      "question": "How does the average discount percentage vary by product category?",
      "thinking_process": [
        "Step 1: Determine the columns needed for the average calculation.",
        "Step 2: Group the data by category to get average discount percentages.",
        "Step 3: Use AVG function to compute the average discount."
      ],
      "query_breakdown": [
        "1. Select category and average of discount_percent.",
        "2. Group results by category.",
        "3. Order results by average discount in descending order."
      ],
      "sql": "SELECT category, AVG(discount_percent) AS average_discount FROM product_sales GROUP BY category ORDER BY average_discount DESC;",
      "explanation": "This query provides insights into how discounts are applied across different product categories, helping to identify pricing strategies.",
      "complexity": "medium",
      "patterns": [
        "aggregate",
        "grouping",
        "averaging"
      ]
    },
    {
      "id": "example_3",
      "question": "What is the total revenue generated by each customer in the last year, and how many orders did each customer place?",
      "thinking_process": [
        "Step 1: Identify the necessary columns for revenue and order count.",
        "Step 2: Filter records for the last year.",
        "Step 3: Group by customer_id to aggregate total revenue and count orders."
      ],
      "query_breakdown": [
        "1. Select customer_id, sum of total_price, and count of order_id.",
        "2. Filter records where order_date is within the last year.",
        "3. Group results by customer_id.",
        "4. Order results by total revenue in descending order."
      ],
      "sql": "SELECT customer_id, SUM(total_price) AS total_revenue, COUNT(order_id) AS order_count FROM product_sales WHERE order_date >= DATE('now', '-1 year') GROUP BY customer_id ORDER BY total_revenue DESC;",
      "explanation": "This query helps in understanding customer value and engagement by analyzing their total spending and order frequency over the past year.",
      "complexity": "high",
      "patterns": [
        "aggregate",
        "counting",
        "filtering",
        "grouping"
      ]
    },
    {
      "id": "example_4",
      "question": "Which regions have the highest total revenue and what is the average price per unit sold in those regions?",
      "thinking_process": [
        "Step 1: Identify the columns needed for total revenue and average price per unit.",
        "Step 2: Group the data by region to calculate both metrics.",
        "Step 3: Order the results by total revenue to find the top regions."
      ],
      "query_breakdown": [
        "1. Select region, sum of total_price, and average of price_per_unit.",
        "2. Group results by region.",
        "3. Order results by total revenue in descending order."
      ],
      "sql": "SELECT region, SUM(total_price) AS total_revenue, AVG(price_per_unit) AS average_price_per_unit FROM product_sales GROUP BY region ORDER BY total_revenue DESC;",
      "explanation": "This query provides a comprehensive view of regional performance, highlighting both revenue generation and pricing effectiveness.",
      "complexity": "high",
      "patterns": [
        "aggregate",
        "averaging",
        "grouping",
        "ordering"
      ]
    },
    {
      "id": "example_5",
      "question": "What is the trend of total sales revenue over the last 12 months, broken down by month?",
      "thinking_process": [
        "Step 1: Extract the month and year from the order_date for grouping.",
        "Step 2: Aggregate total revenue by month.",
        "Step 3: Ensure the data is filtered for the last 12 months."
      ],
      "query_breakdown": [
        "1. Select strftime('%Y-%m', order_date) as month, sum of total_price.",
        "2. Filter records for the last 12 months.",
        "3. Group results by month.",
        "4. Order results by month."
      ],
      "sql": "SELECT strftime('%Y-%m', order_date) AS month, SUM(total_price) AS total_revenue FROM product_sales WHERE order_date >= DATE('now', '-12 months') GROUP BY month ORDER BY month;",
      "explanation": "This query allows for a time-series analysis of sales revenue, helping to identify trends and seasonal patterns in sales performance.",
      "complexity": "high",
      "patterns": [
        "aggregate",
        "time-series",
        "grouping",
        "filtering"
      ]
    }
  ]
}